{"version":3,"sources":["helpers.js","components/StorePicker.js","components/NotFound.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","required","ref","placeholder","defaultValue","Component","NotFound","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.611cabb6.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { getFunName } from '../helpers';\nimport PropTypes from 'prop-types';\n\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  myInput = React.createRef();\n  goToStore = event => {\n    // 1. Stop form from submitting\n    event.preventDefault();\n    // 2. Get text from the input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  }\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input type=\"text\"\n               required\n               ref={this.myInput}\n               placeholder=\"Store Name\"\n               defaultValue={getFunName()}\n               />\n        <button type=\"submit\">Vist Store </button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found?!!!</h2>\n  </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"top\">\n        <h1>\n          Catch\n          <span className=\"ofThe\">\n            <span className=\"of\">of</span>\n            <span className=\"the\">the</span>\n          </span>\n          Day\n        </h1>\n        <h3 className=\"tagline\">\n          <span>{this.props.tagline}</span>\n        </h3>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    }\n    // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      )\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition classNames=\"count\" key={count} timeout={{enter: 500, exit: 500}}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n          </span>\n\n        </li>\n      </CSSTransition>\n    );\n  }\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailble = fish && fish.status === 'available';\n      if (isAvailble) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = event => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh form\n    event.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input type=\"text\" name=\"name\" ref={this.nameRef} placeholder=\"Name\"/>\n        <input type=\"text\" name=\"price\" ref={this.priceRef} placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input type=\"text\" name=\"image\" ref={this.imageRef} placeholder=\"Image\" />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    )\n  }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = (event) => {\n    // update the fish\n    // 1. take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  }\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name}/>\n        <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price}/>\n        <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold out!</option>\n        </select>\n        <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}></textarea>\n        <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image}/>\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    )\n  }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Login with Github\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n      Login with Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Login with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDrP3AIyb0dyuRd3aVMO0v3HqexRfvQk7U\",\n  authDomain: \"catch-of-the-day-eric-nation.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-eric-nation.firebaseio.com\",\n  projectId: \"catch-of-the-day-eric-nation\",\n  storageBucket: \"catch-of-the-day-eric-nation.appspot.com\",\n  messagingSenderId: \"809352631481\"\n});\n\nconst base = Rebase.createClass(firebase.database());\n\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport firebase from 'firebase';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user })\n      }\n    })\n  }\n\n  authHandler = async (authData) => {\n    // 1. Look up current store in the firebase database\n    const store = await base.fetch(this.props.storeId, {context: this });\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory comopnent to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n\n    })\n  }\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  }\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log out!</button>\n    // check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />\n    }\n    // check if they are NOT the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory!!!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}/>\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fish</button>\n      </div>\n    )\n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport { formatPrice } from '../helpers';\nimport PropTypes from 'prop-types';\n\nclass Fish extends React.Component {\n  static propTypes = {\n      details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  }\n\n  render() {\n    const { image, name, price, desc, status} = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name}/>\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? 'Add to Cart' : 'Sold Out!'}\n        </button>\n      </li>\n    )\n  }\n}\n\nexport default Fish;","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // reinstate our localStoreage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      })\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    // clean up memory\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add the new fish to the fishes\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({\n      fishes: fishes\n    })\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update the state\n    fishes[key] = updatedFish;\n    // 3. set that to state\n    this.setState({ fishes });\n  }\n\n  deleteFish = (key) => {\n    // 1. Take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    this.setState({ fishes })\n  }\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    })\n  };\n\n  addToOrder = (key) => {\n    // 1. Make a copy of the state\n    const order = {...this.state.order};\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order })\n  }\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Daily\"/>\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}/>\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport StorePicker from './StorePicker';\nimport NotFound from './NotFound';\nimport App from './App';\n\nconst Router = () => (\n  <BrowserRouter>\n  <Switch>\n    <Route exact path=\"/\" component={StorePicker} />\n    <Route path=\"/store/:storeId\" component={App} />\n    <Route component={NotFound} />\n  </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router';\n\n\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}